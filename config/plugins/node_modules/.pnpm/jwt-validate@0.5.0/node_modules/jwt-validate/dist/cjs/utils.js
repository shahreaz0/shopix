"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CloudType = void 0;
exports.getEntraJwksUri = getEntraJwksUri;
var CloudType;
(function (CloudType) {
    CloudType[CloudType["Public"] = 0] = "Public";
    CloudType[CloudType["Ppe"] = 1] = "Ppe";
    CloudType[CloudType["USGovernment"] = 2] = "USGovernment";
    CloudType[CloudType["China"] = 3] = "China";
})(CloudType || (exports.CloudType = CloudType = {}));
/**
 * Retrieves the JWKS URI for the specified tenant.
 * @param {string} [tenant='common'] - The tenant to retrieve the JWKS URI for.
 * @param {CloudType} [cloud=CloudType.Public] - The cloud to retrieve the JWKS URI for.
 * @returns {Promise<string>} - A promise that resolves with the JWKS URI.
 */
function getEntraJwksUri() {
    return __awaiter(this, arguments, void 0, function* (tenant = 'common', cloud = CloudType.Public) {
        let cloudUrl = '';
        switch (cloud) {
            case CloudType.Public:
                cloudUrl = 'login.microsoftonline.com';
                break;
            case CloudType.Ppe:
                cloudUrl = 'login.windows-ppe.net';
                break;
            case CloudType.USGovernment:
                cloudUrl = 'login.microsoftonline.us';
                break;
            case CloudType.China:
                cloudUrl = 'login.chinacloudapi.cn';
                break;
        }
        const res = yield fetch(`https://${cloudUrl}/${tenant}/.well-known/openid-configuration`);
        const data = (yield res.json());
        return data.jwks_uri;
    });
}
