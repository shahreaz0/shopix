"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TokenCacheWrapper = void 0;
const debug_1 = __importDefault(require("debug"));
const lru_memoizer_1 = __importDefault(require("lru-memoizer"));
const util_1 = require("util");
const logger = (0, debug_1.default)('jwt-validate');
// Based on https://github.com/auth0/node-jwks-rsa/blob/4fe372be935c2aa0882e0f1e58d33eead4be966d/src/wrappers/cache.js
// exposes cache to make it possible to clear cache and keys
class TokenCacheWrapper {
    constructor(client, { cacheMaxEntries = 5, cacheMaxAge = 600000 }) {
        logger(`Configured caching of signing keys. Max: ${cacheMaxEntries} / Age: ${cacheMaxAge}`);
        this.cache = (0, lru_memoizer_1.default)({
            hash: (kid) => kid,
            load: (0, util_1.callbackify)(client.getSigningKey.bind(client)),
            maxAge: cacheMaxAge,
            max: cacheMaxEntries
        });
    }
    getCacheWrapper() {
        return (0, util_1.promisify)(this.cache);
    }
}
exports.TokenCacheWrapper = TokenCacheWrapper;
