// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum AccountStatus {
  PENDING
  ACTIVE
  INACTIVE
  SUSPENDED
}

model User {
  id             String         @id @default(cuid())
  name           String
  email          String         @unique
  password       String
  role           Role           @default(USER)
  verified       Boolean        @default(false)
  status         AccountStatus  @default(PENDING)
  loginHistories LoginHistory[]

  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  verificationCodes VerificationCode[]
}

enum AttemptStatus {
  SUCCESS
  FAILED
}

model LoginHistory {
  id            String        @id @default(cuid())
  userId        String
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  ipAddress     String?
  userAgent     String?
  attemptStatus AttemptStatus
  loginAt       DateTime      @default(now())
}

enum VerificationStatus {
  PENDING
  USED
  EXPIRED
}

enum VerificationType {
  ACCOUNT_ACTIVATION
  PASSWORD_RESET
  EMAIL_CHANGE
  PASSWORD_CHANGE
  TWO_FACTOR_AUTH
  TWO_FACTOR_AUTH_DISABLE
}

model VerificationCode {
  id         String             @id @default(cuid())
  userId     String
  user       User               @relation(fields: [userId], references: [id])
  code       String
  status     VerificationStatus @default(PENDING)
  type       VerificationType   @default(ACCOUNT_ACTIVATION)
  issuedAt   DateTime           @default(now())
  expiredAt  DateTime
  verifiedAt DateTime?
}
